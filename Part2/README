1st Partner: Logan McDonald
2nd Partner: Veronica Salm
CMPUT 274 LBL EA2
Fall 2016

Code Filename: restaurant_finder.cpp

Collaborated Code: This file was collaboratively developed by both partners, as listed above.

Much of the code from this assignment was adapted or copied from code developed in class, including the restaurant sorting functions and other code as detailed in the assignment instructions.

Accessories:
1 * Arduino Mega Board (AMG)
1 * A-B Style USB Cable
1 * Adafruit 1.8" 18-bit color TFT LCD display with microSD card - ST7735R
1 * Kingston flash memory card - 4 GB - microSDHC
1 * Sparkfun Thumb Joystick
5 * LED 5mm
5 * Resistor (560 Ohm (Grn Blu Brown))
1 * Potentiometer (Single turn trimpot, Breadboard friendly with knob)

Wiring instructions: Uses the standard wiring for both the LCD display and joystick as was used in class. The full wiring instructions can be found here: http://ugweb.cs.ualberta.ca/~c274/web/ConcreteComputing/section/adafruit_lcd.htm 

For the potentiometer and LED Pins:

GND <---> Potentiometer Lead 1
Pin A2 <---> Potentiometer Lead 2 
Power Bus <---> Potentiometer Lead 3

Pin 2 <--> Longer LED lead |LED| Shorter LED lead <---> Resistor <--> GND
Pin 3 <--> Longer LED lead |LED| Shorter LED lead <---> Resistor <--> GND
Pin 4 <--> Longer LED lead |LED| Shorter LED lead <---> Resistor <--> GND
Pin 10 <--> Longer LED lead |LED| Shorter LED lead <---> Resistor <--> GND
Pin 11 <--> Longer LED lead |LED| Shorter LED lead <---> Resistor <--> GND

Note: The LEDs are connected to pins 2, 3, 4, 10, and 11 because pins 5 through 9 are already being used in the standard wiring for the LCD screen (see link above).

Running the code:
Open a bash terminal. After moving to the correct directory, load the file, compile and upload it using the command "make upload". The serial monitor can be opened using "serial-mon" (though it is not used explicitly in this assignment, it may be used to check that the SD card has initialized correctly).

Problem Areas, Assumptions and General Notes: 

In order to run this code, you must have a properly configured SD card that contains the file "yeg-big.lcd" in order to display the map of Edmonton. It must also contain some raw-written restaurants as loaded in class. The file lcd_image.h is also necessary to run the code and is included in the uploaded zipped file.

In the setup() function, the joystick's natural vertical and horizontal resting position is determined. It is assumed that the user is not touching the joystick when the program starts.

When the program starts, an introductory message appears on the LCD screen with basic instructions for the user. The user must press and release the joystick button in order to progress to mode 0 (the instructions for this are displayed on the screen).

When mode 0 is entered for the first time, the cursor (a 3x3 pixel square) starts in the approximate center of screen and map. 

The cursor moves much more quickly near the top and left edges of the map than at the bottom and right edges, since the cursor speed was set to be ideal in the center of the map.

The ratings are calculated using voltage readings from the potentiometer. The checkRating() function details the voltage intervals that correspond to each rating.

The potentiometer can be adjusted at any time, and ratings and LEDs will be updated accordingly when the program is in Mode 0. In Mode 1, the ratings and LEDs will also be updated but only by one increment at a time. This is because every time the rating is changed, the new list of restaurants is calculated and displayed in accordance with the new rating. Before a list of restaurants is displayed, a message prints on the tft display ("X stars or greater: ", where X is the rating) to tell the user which restaurants are being displayed.


In mode 1, the scrolling system was designed such that the LCD screen will always be full, with 20 restaurants on the screen at a time. If the number of stored restaurants is not an exact multiple of 20, the restaurant at the top of the final list will be set so that it is 19 restaurants before the last stored restaurant (so that the last stored restaurant will always appear at the bottom of the LCD screen when it is reached). When going in reverse, the restaurant at the top of the list will always be a multiple of 20.

Optional print statements were commented out in the displayRest function. They can be put back in to allow the user to use the Serial Monitor to display restaurant distance, name, index and rating.

The location of the restaurants on the map is not an exact representation. Also, some of the listed restaurants are no longer in business.
